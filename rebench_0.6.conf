#ReBench -*- mode: yaml; yaml-indent-offset: 4 -*-

standard_experiment: CrossBenchmarks
standard_data_file: 'output/pycket.data'

reporting:
    # results can also be reported to a codespeed instance
    # see: https://github.com/tobami/codespeed
    # codespeed:
    #     url: http://localhost:1/ # not supposed to work 
    #     # other details like commitid are required to be given as parameters
    confidence_level: 0.95
    # irc:
    #     server:  chat.freenode.net
    #     port:    6666
    #     channel: '#pycket'
    #     nick:    rebenchbot
    #     log_events:
    #         - job_completed
    #         #- run_failed

runs:
    number_of_data_points: 10

# settings for quick runs, useful for fast feedback during experiments
quick_runs:
    number_of_data_points: 3
    max_time: 60   # time in seconds

# definition of benchmark suites
benchmark_suites:
    CrossBenchmarks:
        gauge_adapter: Multivariate
        location: CrossBenchmarks
        command: -%(variable)s %(benchmark)s
        #%(input)s
        #input_sizes: []
        variable_values: [nothing, fixflo, unsafe]
        # variable_values: [nothing]
        benchmarks: &defaultbenchmarks
            - ack
            - array1
            - browse
            - cat
            - conform
            - cpstak
            - ctak
            - dderiv
            - deriv
            - destruc
            - diviter
            - divrec
            - dynamic
            - earley
            - fft
            - fib
            - fibc
            - fibfp
            - gcbench
            - gcold
            - graphs
            - lattice
            - matrix
            - maze
            - mazefun
            - mbrot
            - nqueens
            - nucleic
            - paraffins
            - parsing
            - perm9
            # - peval
            - pi
            - pnpoly
            - primes
            - puzzle
            - ray
            - scheme
            - simplex
            - slatex
            - string
            - sum
            - sum1
            - sumfp
            - sumloop
            - tail
            - tak
            - takl
            #- tfib
            - trav1
            - trav2
            - triangl
            - wc
            - boyer
            - sboyer
            - nboyer
    AllBenchmarks:
        gauge_adapter: Multivariate
        location: CrossBenchmarks
        command: -%(variable)s %(benchmark)s
        variable_values: [nothing]
        benchmarks:
            - ack
            - array1
            - browse
            - cat
            - conform
            - cpstak
            - ctak
            - dderiv
            - deriv
            - destruc
            - diviter
            - divrec
            - dynamic
            - earley
            - fft
            - fib
            - fibc
            - fibfp
            - gcbench
            - gcold
            - graphs
            - lattice
            - matrix
            - maze
            - mazefun
            - mbrot
            - nqueens
            - nucleic
            - paraffins
            - parsing
            - perm9
            # - peval
            - pi
            - pnpoly
            - primes
            - puzzle
            - ray
            - scheme
            - simplex
            - slatex
            - string
            - sum
            - sum1
            - sumfp
            - sumloop
            - tail
            - tak
            - takl
            - trav1
            - trav2
            - triangl
            - wc
            - boyer
            - sboyer
            - nboyer
            # - tfib # threads
    ShootoutBenchmarks:
        gauge_adapter: Multivariate
        location: ShootoutBenchmarks
        command: PURE %(benchmark)s
        benchmarks:
            - ackermann:
                extra_args: 12
            - ary:
                extra_args: 600000
            - binarytrees:
                extra_args: 17
            - binarytrees-generic:
                extra_args: 17
            # - chameneos:
            #     extra_args: 120000
            # - cheapconcurrency:
            #     extra_args: 2000
            # - echo: # needs thread
            #     extra_args: 200000
            # - except: # call-with-continuation-prompt
            #     extra_args: 2000000
            - fannkuch:
                extra_args: 10
            - fannkuch-redux:
                extra_args: 10
            - fannkuch-redux-generic:
                extra_args: 10
            - fasta:
                extra_args: 100000000
            - fasta-generic:
                extra_args: 100000000
            - fibo:
                extra_args: 42
            - hash:
                extra_args: 2000000
            - hash2:
                extra_args: 1000
            - heapsort:
                extra_args: 2500000
            - k-nucleotide:
                extra_args: fasta-500000
            - lists:
                extra_args: 2000
            - mandelbrot:
                extra_args: 3000
            - mandelbrot-generic:
                extra_args: 3000
            - matrix:
                extra_args: 12000
            - meteor:
                extra_args: 200000
            - moments:
                extra_args: moments-2000
            - nbody:
                extra_args: 3000000
            - "nbody-generic":
                extra_args: 3000000
            - "nbody-vec":
                extra_args: 3000000
            - "nbody-vec-generic":
                extra_args: 3000000
            - nestedloop:
                extra_args: 33
            - nsieve:
                extra_args: 12
            - nsievebits:
                extra_args: 12
            - partialsums:
                extra_args: 3000000
            - pidigits:
                extra_args: 4000
            - pidigits1:
                extra_args: 4000
            - random:
                extra_args: 40000000
            - recursive:
                extra_args: 12
            - regexmatch:
                extra_args: regexmatch-1000000
            - regexpdna:
                extra_args: fasta-1000000
            - reversecomplement:
               extra_args: fasta-30000000
            - reversecomplement-generic:
               extra_args: fasta-30000000
            - reversefile:
                extra_args: sumcol-3000
            - sieve:
                extra_args: 25000
            - spellcheck:
                extra_args: ulysses # or jabberwock_hunting, alice
            - spectralnorm:
                extra_args: 2000
            - "spectralnorm-generic":
                extra_args: 2000
            - strcat:
                extra_args: 50000000
            - sumcol:
                extra_args: sumcol-10000
            # - "thread-ring":
            #     extra_args: 1000000
            - wc:
                extra_args: sumcol-20000
            - wordfreq:
                extra_args: sumcol-10000

virtual_machines:
    Racket:
        path: bin
        binary: run-racket
    Gambit:
        path: bin
        binary: run-gambit
    Bigloo:
        path: bin
        binary: run-bigloo
    Larceny:
        path: bin
        binary: run-larceny
    Pycket:
        path: bin
        binary: run-pycket
    PycketNoJit:
        path: bin
        binary: run-pycket-nojit
        number_of_data_points: 1
    V8:
        path: bin
        binary: run-v8
    Spidermonkey:
        path: bin
        binary: run-spidermonkey

experiments:
    CrossBenchmarks:
        description: >
            All the portable, cross-dialect benchmarks from Larceny
        benchmark: CrossBenchmarks
        data_file: output/CrossBenchmarks.tsv
        number_of_data_points: 1
        executions: &crossvms
          - Racket
          - Pycket
          # - PycketNoJit
          - Gambit
          - Larceny
          - Bigloo
    CrossBenchmarksOnce:
        description: Run the cross-benchmarks once
        benchmark: CrossBenchmarks
        data_file: output/CrossBenchmarks_once.data
        number_of_data_points: 1
        executions: *crossvms
    CrossBenchmarksPycket:
        description: Run all benchmarks with pycket
        number_of_data_points: 1
        benchmark: AllBenchmarks
        executions: Pycket
        data_file: output/CrossBenchmarks_pycket.data
    CrossBenchmarksFast:
        description: Run all benchmarks with pycket and racket
        number_of_data_points: 1
        benchmark: AllBenchmarks
        executions:
            - Pycket
            - Racket
        data_file: output/CrossBenchmarks_fast.data
    ShootoutBenchmarks:
        description: Run the Racket shootout benchmarks
        benchmark: ShootoutBenchmarks
        data_file: output/Shootout.tsv
        executions:
            - Pycket
            - Racket
    ShootoutBenchmarksFast:
        description: >
            Run the Racket shootout benchmarks fast (once)
        benchmark: ShootoutBenchmarks
        number_of_data_points: 1
        executions:
            - Pycket
            - Racket
        data_file: output/Shootout_fast.tsv
    ChaperoneBenchmarks:
        description: Run the Racket chaperone benchmarks
        benchmark: ChaperoneBenchmarks
        data_file: output/Chaperone.tsv
        executions:
            - Pycket
            - Racket
            - V8
            - Spidermonkey
    ChaperoneBenchmarksFast:
        description: >
            Run the Racket chaperone benchmarks fast (once)
        benchmark: ShootoutBenchmarks
        number_of_data_points: 1
        executions:
            - Pycket
            - Racket
        data_file: output/Chaperone_fast.tsv
# EOF
