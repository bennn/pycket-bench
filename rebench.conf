#ReBench -*- mode: yaml; yaml-indent-offset: 4 -*-

standard_experiment: RacketCookedBenchmarks
standard_data_file: 'output/pycket.data'

reporting:
    # results can also be reported to a codespeed instance
    # see: https://github.com/tobami/codespeed
    # codespeed:
    #     url: http://localhost:1/ # not supposed to work 
    #     # other details like commitid are required to be given as parameters
    confidence_level: 0.95

runs:
    number_of_data_points: 10

# settings for quick runs, useful for fast feedback during experiments
quick_runs:
    number_of_data_points: 3
    max_time: 60   # time in seconds

# definition of benchmark suites
benchmark_suites:
    CrossBenchmarks:
        performance_reader: TestVMPerformance
        location: CrossBenchmarks
        command: -r benchmark.rkt -%(variable)s %(benchmark)s
        #%(input)s
        #input_sizes: []
        #variable_values: [nothing, fixflo, unsafe]
        variable_values: [nothing]
        benchmarks:
            - ack
            - array1
            - boyer
            - browse
            - cat
            - conform
            - cpstak
            - ctak
            - dderiv
            - deriv
            - destruc
            - diviter
            - divrec
            - dynamic
            - earley
            - fft
            - fib
            - fibc
            - fibfp
            - gcbench
            - gcold
            - graphs
            - lattice
            - matrix
            - maze
            - mazefun
            - mbrot
            - nboyer
            - nqueens
            - nucleic
            - paraffins
            - parsing
            - perm9
            - peval
            - pi
            - pnpoly
            - primes
            - puzzle
            - ray
            - sboyer
            - scheme
            - simplex
            - slatex
            - string
            - sum
            - sum1
            - sumfp
            - sumloop
            - tail
            - tak
            - takl
            - tfib
            - trav1
            - trav2
            - triangl
            - wc
    CookedBenchmarks:
        performance_reader: TestVMPerformance
        location: CrossBenchmarks/dish
        command: "%(benchmark)s-%(variable)s.rkt"
        #%(input)s
        #input_sizes: []
        #variable_values: [nothing, fixflo, unsafe]
        variable_values: [nothing]
        benchmarks:
            - ack
            - array1
            - boyer
            - browse
            - cat
            - conform
            - cpstak
            - ctak
            - dderiv
            - deriv
            - destruc
            - diviter
            - divrec
            - dynamic
            - earley
            - fft
            - fib
            - fibc
            - fibfp
            - gcbench
            - gcold
            - graphs
            - lattice
            - matrix
            - maze
            - mazefun
            - mbrot
            - nboyer
            - nqueens
            - nucleic
            - paraffins
            - parsing
            - perm9
            - peval
            - pi
            - pnpoly
            - primes
            - puzzle
            - ray
            - sboyer
            - scheme
            - simplex
            - slatex
            - string
            - sum
            - sum1
            - sumfp
            - sumloop
            - tail
            - tak
            - takl
            - tfib
            - trav1
            - trav2
            - triangl
            - wc

virtual_machines:
    Racket:
        path: /usr/bin
        binary: env racket
    RRacket:
        path: /usr/bin
        binary: env racket -e '(require racket/fixnum racket/flonum racket/unsafe/ops)' -r
    Pycket:
        path: pycket
        binary: pycket-c
    PycketNoJit:
        path: pycket
        binary: pycket-c --jit off

experiments:
    RacketBenchmarks:
        description: >
            All the portable, cross-dialect benchmarks from Larceny
        benchmark: CrossBenchmarks
        # number_of_data_points: 1
        executions:
          - Racket
          - Pycket
    RacketCookedBenchmarks:
        description: >
            All the portable, cross-dialect benchmarks from Larceny
            pre-cooked files for easier execution
        benchmark: CookedBenchmarks
        number_of_data_points: 1
        executions:
          - RRacket
          - Pycket
          - PycketNoJit
# EOF
